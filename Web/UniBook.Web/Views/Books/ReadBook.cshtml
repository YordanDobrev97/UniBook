@model ContentBookViewModel

<div id="wrapper">
    <div id="container">
        <section class="open-book">
            <article>
                <h2 class="chapter-title">@Model.Title</h2>
                <p id="content"></p>
            </article>

            <button type="button" class="btn btn-info mx-4 mt-lg-0 w-25 p-2 float-left" onclick="previousPage()">Предишна страница</button>

            <button type="button" class="btn btn-info mx-4 mt-lg-0 w-25 p-2 float-right btn-lg" onclick="nextPage()">
                Следваща страница
            </button>
        </section>
    </div>

    <form id="bookForm" hidden="hidden" method="post"></form>
    <button type="button" onclick="savePageBook()" id="save-btn" class="btn btn-primary btn-lg btn-block">
        <span class="save">Запиши текущата страница</span>
    </button>

    <button onclick="addToFavoriteBooks()" type="button" class="btn btn-outline-primary btn-lg btn-block mt-3">
        <span>Добави в любими</span>
    </button>

    <span style="display: none;" id="saveMessage" class="alert alert-success" role="alert">
        Успешно запази текущата страница
    </span>

    <span style="display: none;" id="favoriteBooks" class="alert alert-success" role="alert">
        Книгата е успешно добавена в любими
    </span>

    <button type="button" onclick="addToReadedBooks()" id="readed" class="btn btn-outline-success btn-lg btn-block mt-3">
        <span class="readedBook">Добави в Прочетени</span>
    </button>

    <span style="display: none;" id="saveRead" class="alert alert-success" role="alert">
        Книгата е успешно добавена в прочетени
    </span>
</div>

@section Scripts {
    <script>
    var startIndex = @Html.Raw(Json.Serialize(Model.ReadCount));
    var length = 1100;
    window.onload = () => {
        let content = @Html.Raw(Json.Serialize(Model.Content));
        content = content.substr(startIndex, length);
        document.getElementById('content').innerHTML = content;
    }

    function nextPage() {
        let content = @Html.Raw(Json.Serialize(Model.Content));
        startIndex += length;
        content = content.substr(startIndex, length);
        document.getElementById('content').innerHTML = content;
    }

    function previousPage() {
        if (startIndex != 0) {
            let content = @Html.Raw(Json.Serialize(Model.Content));
            startIndex -= length;
            content = content.substr(startIndex, length);
            document.getElementById('content').innerHTML = content;
        }
    }

    function savePageBook() {
        const bookId = @Html.Raw(Json.Serialize(Model.BookId));
        const token = $('#bookForm input[name=__RequestVerificationToken]').val();

        const bookData = {
            readCount: startIndex,
            bookId: bookId,
        }

        console.log(bookData);

        const jsonData = JSON.stringify(bookData);
        $.ajax({
            url: '/api/Users/BookData',
            type: 'post',
            contentType: 'application/json',
            headers: {
                "X-CSRF": token,
            },
            data: jsonData,
            success: function (data, status) {
                $("#saveMessage").show();
                setTimeout(function () { $("#saveMessage").hide(); }, 3000);
            },
            error: function (html, status, err) {
                console.log('error not saved.')
            }
        });
    }
    </script>

    <script>
    function addToReadedBooks() {
        const bookId = @Html.Raw(Json.Serialize(Model.BookId));
        const token = $('#bookForm input[name=__RequestVerificationToken]').val();

        const bookData = {
            bookId: bookId,
        }

        const jsonData = JSON.stringify(bookData);
        $.ajax({
            url: '/api/Users/AddToReadedBooks',
            type: 'post',
            contentType: 'application/json',
            data: jsonData,
            headers: {
                "X-CSRF": token,
            },
            success: function (data, status) {
                $("#saveRead").show();
                setTimeout(function () { $("#saveRead").hide(); }, 3000);
            },
            error: function (html, status, err) {
                console.log('error not saved.')
            }
        });
    }
    </script>

    <script>
        function addToFavoriteBooks() {
            const bookId = @Html.Raw(Json.Serialize(Model.BookId));
            const token = $('#bookForm input[name=__RequestVerificationToken]').val();

        const bookData = {
            bookId: bookId,
        }

        const jsonData = JSON.stringify(bookData);
        $.ajax({
            url: '/api/Users/AddToFavoriteBooks',
            type: 'post',
            contentType: 'application/json',
            data: jsonData,
            headers: {
                "X-CSRF": token,
            },
            success: function (data, status) {
                $("#favoriteBooks").show();
                setTimeout(function () { $("#favoriteBooks").hide(); }, 3000);
            },
            error: function (html, status, err) {
                console.log('error not saved.')
            }
        });
        }
    </script>
} 
