@model DetailsBookViewModel

<link href="~/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<div id="container">
    <div class="product-details">
        <h1>@Model.Name</h1>
        <div>
            <p>@Model.Description</p>
        </div>

        <div class="control">
            @if (Model.IsFree)
            {
                <span class="price">Безплатна</span>
                <button class="btn">
                    <span class="shopping-cart"><i class="fa fa-shopping-cart" aria-hidden="true"></i></span>
                    <span class="buy"></span>
                    <a class="btn btn-info" asp-area="" asp-controller="Books" asp-action="ReadBook" asp-route-id="@Model.BookId">Чети онлайн</a>
                </button>
            }
            else
            {
                <span class="price">Платена</span>
                <button class="btn">
                    <a asp-controller="Payments" asp-action="PayBook" asp-route-id="@Model.BookId" class="page-link">Купи</a>
                </button>
            }
            <button type="button" onclick="likeBook()">
                <a href="#" class="like-button">
                    <?xml version="1.0" encoding="utf-8" ?>
                    <svg width="20" height="20" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M320 1344q0-26-19-45t-45-19q-27 0-45.5 19t-18.5 45q0 27 18.5 45.5t45.5 18.5q26 0 45-18.5t19-45.5zm160-512v640q0 26-19 45t-45 19h-288q-26 0-45-19t-19-45v-640q0-26 19-45t45-19h288q26 0 45 19t19 45zm1184 0q0 86-55 149 15 44 15 76 3 76-43 137 17 56 0 117-15 57-54 94 9 112-49 181-64 76-197 78h-129q-66 0-144-15.5t-121.5-29-120.5-39.5q-123-43-158-44-26-1-45-19.5t-19-44.5v-641q0-25 18-43.5t43-20.5q24-2 76-59t101-121q68-87 101-120 18-18 31-48t17.5-48.5 13.5-60.5q7-39 12.5-61t19.5-52 34-50q19-19 45-19 46 0 82.5 10.5t60 26 40 40.5 24 45 12 50 5 45 .5 39q0 38-9.5 76t-19 60-27.5 56q-3 6-10 18t-11 22-8 24h277q78 0 135 57t57 135z" /></svg>
                </a>
            </button>
        </div>
    </div>

    <div class="product-image">
        <img src="@Model.ImageUrl" alt="BookImage">
    </div>
</div>

<section id="app">
    <div class="container">
        <div class="row">
            <div class="col-6 bg-dark">
                @foreach (var item in Model.Comments)
                {
                    <div class="comment">
                        <div>
                            <i class="fas fa-user-circle"></i>
                            <span>@item.User</span>
                        </div>
                        <p>@item.Body</p>
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <form method="post" asp-controller="Books" asp-action="AddComment">
                <div class="col-6">
                    <textarea type="text" rows="20" cols="80" name="body" class="input-container" placeholder="Напиши коментар към книгата"></textarea>
                    <input hidden="hidden" name="bookId" value="@Model.BookId" />
                    <input type="submit" class='primaryContained float-right' value="Добави коментар" />
                </div>
            </form>
        </div>
    </div>
</section>

<style>

.like-button {
  display: flex;
  align-items: center;
  justify-content: center;
}
.like-button.animated {
  -webkit-animation: pop 0.9s both;
  animation: pop 0.9s both;
}
.like-button svg {
  opacity: 1;
}
.like-button svg path {
  fill: #333;
  transition: fill .4s ease-out;
}
.like-button.active svg path {
  fill: #2196f3;
 }

@@-webkit-keyframes pop {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  30% {
    -webkit-transform: scale3d(1.25, 0.75, 1);
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    -webkit-transform: scale3d(0.75, 1.25, 1);
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    -webkit-transform: scale3d(1.15, 0.85, 1);
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    -webkit-transform: scale3d(0.95, 1.05, 1);
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    -webkit-transform: scale3d(1.05, 0.95, 1);
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}

@@keyframes pop {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  30% {
    -webkit-transform: scale3d(1.25, 0.75, 1);
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    -webkit-transform: scale3d(0.75, 1.25, 1);
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    -webkit-transform: scale3d(1.15, 0.85, 1);
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    -webkit-transform: scale3d(0.95, 1.05, 1);
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    -webkit-transform: scale3d(1.05, 0.95, 1);
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}
</style>

<script>
    let button = document.querySelector(".like-button");

    button.addEventListener("click", function (e) {
        e.preventDefault();
        this.classList.toggle("active");
        this.classList.add("animated");
        generateClones(this);
    });


    function generateClones(button) {
        let clones = randomInt(2, 4);
        for (let it = 1; it <= clones; it++) {
            let clone = button.querySelector("svg").cloneNode(true),
                size = randomInt(5, 16);
            button.appendChild(clone);
            clone.setAttribute("width", size);
            clone.setAttribute("height", size);
            clone.style.position = "absolute";
            clone.style.transition =
                "transform 0.5s cubic-bezier(0.12, 0.74, 0.58, 0.99) 0.3s, opacity 1s ease-out .5s";
            let animTimeout = setTimeout(function () {
                clearTimeout(animTimeout);
                clone.style.transform =
                    "translate3d(" +
                    (plusOrMinus() * randomInt(10, 25)) +
                    "px," +
                    (plusOrMinus() * randomInt(10, 25)) +
                    "px,0)";
                clone.style.opacity = 0;
            }, 1);
            let removeNodeTimeout = setTimeout(function () {
                clone.parentNode.removeChild(clone);
                clearTimeout(removeNodeTimeout);
            }, 900);
            let removeClassTimeout = setTimeout(function () {
                button.classList.remove("animated")
            }, 600);
        }
    }


    function plusOrMinus() {
        return Math.random() < 0.5 ? -1 : 1;
    }

    function randomInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }

</script>

<script>
    const bookId = @Html.Raw(Json.Serialize(Model.BookId));

    function likeBook() {
        const data = {
            bookId: bookId,
        };

        const jsonData = JSON.stringify(data);

        $.ajax({
            url: '/api/Users/Book',
            method: 'POST',
            data: jsonData,
            contentType: 'application/json',
        });
    }
</script>